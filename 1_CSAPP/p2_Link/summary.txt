

预处理： cpp
	gcc -E main.c -o main.i
	预处理器	cpp main.c -o main.i

编译器：cc1
	gcc -S main.c -o main.s
	C编译器	cc -S main.c -o main.s

汇编：as
	gcc -c main.c -o main.o   --> ELF
	as -c main.s -o main.o

链接： ld
                     --> EOF	

ELF文件： /usr/include/elf.h
	ELF header(0 + 64) + Sections + Sections header table(656 + 64*12)
	readelf -h add.o     struct: Elf32_Ehdr
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00  			unsigned char e_ident[EI_NIDENT]; /* Magic number and other info */
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              REL (Relocatable file)				Elf32_Half    e_type;    /* Object file type */  and 可执行文件 和 共享文件
  Machine:                           Advanced Micro Devices X86-64
  Version:                           0x1
  Entry point address:               0x0								# Elf64_Addr    e_entry;        /* Entry point virtual address */
  Start of program headers:          0 (bytes into file)				# Elf32_Off e_phoff;        /* Program header table file offset */
  Start of section headers:          656 (bytes into file)				Elf32_Off e_shoff;        /* Section header table file offset */
  Flags:                             0x0								# Elf64_Word    e_flags;        /* Processor-specific flags */
  Size of this header:               64 (bytes)							Elf32_Half    e_ehsize;       /* ELF header size in bytes */
  Size of program headers:           0 (bytes)							# Elf32_Half    e_phentsize;        /* Program header table entry size */
  Number of program headers:         0									# Elf32_Half    e_phnum;        /* Program header table entry count */
  Size of section headers:           64 (bytes)							Elf32_Half    e_shentsize;        /* Section header table entry size */
  Number of section headers:         12									Elf32_Half    e_shnum;        /* Section header table entry count */
  Section header string table index: 9									Elf32_Half    e_shstrndx;     /* Section header string table index */

  readelf -S add.o  反汇编 查看机器代码对应的汇编指令： objdump -s -d add.o
  There are 13 section headers, starting at offset 0x428:
	Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .text             PROGBITS         0000000000000000  00000040
       0000000000000059  0000000000000000  AX       0     0     1
  [ 2] .rela.text        RELA             0000000000000000  00000338
       00000000000000d8  0000000000000018   I      11     1     8
  [ 3] .data             PROGBITS         0000000000000000  0000009c
       0000000000000008  0000000000000000  WA       0     0     4
  [ 4] .bss              NOBITS           0000000000000000  000000a4			# 未初始化的静态变量 或者 初始化0的全局和静态变量
       0000000000000008  0000000000000000  WA       0     0     4
  [ 5] .rodata           PROGBITS         0000000000000000  000000a4			# 初始化的全局变量和静态变量
       0000000000000011  0000000000000000   A       0     0     1
  [ 6] .comment          PROGBITS         0000000000000000  000000b5			# 注释
       0000000000000013  0000000000000001  MS       0     0     1
  [ 7] .note.GNU-stack   PROGBITS         0000000000000000  000000c8
       0000000000000000  0000000000000000           0     0     1
  [ 8] .eh_frame         PROGBITS         0000000000000000  000000c8
       0000000000000038  0000000000000000   A       0     0     8
  [ 9] .rela.eh_frame    RELA             0000000000000000  00000410
       0000000000000018  0000000000000018   I      11     8     8
  [10] .shstrtab         STRTAB           0000000000000000  00000100
       0000000000000061  0000000000000000           0     0     1
  [11] .symtab           SYMTAB           0000000000000000  00000168			# 符号表
       0000000000000180  0000000000000018          12    11     8
  [12] .strtab           STRTAB           0000000000000000  000002e8			# 字符串表
       000000000000004c  0000000000000000           0     0     1

	readelf -s main.o 查看符号表
	Symbol table '.symtab' contains 16 entries:
   	Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS main.c
     2: 0000000000000000     0 SECTION LOCAL  DEFAULT    1 
     3: 0000000000000000     0 SECTION LOCAL  DEFAULT    3 
     4: 0000000000000000     0 SECTION LOCAL  DEFAULT    4 
     5: 0000000000000004     4 OBJECT  LOCAL  DEFAULT    4 _ZZ4mainE3ret
     6: 0000000000000004     4 OBJECT  LOCAL  DEFAULT    3 _ZZ4mainE4sum1
     7: 0000000000000000     0 SECTION LOCAL  DEFAULT    5 
     8: 0000000000000000     0 SECTION LOCAL  DEFAULT    7 
     9: 0000000000000000     0 SECTION LOCAL  DEFAULT    8 
    10: 0000000000000000     0 SECTION LOCAL  DEFAULT    6 
    11: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 global
    12: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    4 global_0
    13: 0000000000000000    89 FUNC    GLOBAL DEFAULT    1 main
    14: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND _Z5myaddii
    15: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND printf

静态链接库